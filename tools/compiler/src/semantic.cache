;; Object src/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "src/"
  :tables (list 
   (semanticdb-table "Parser.y"
    :major-mode 'c-mode
    :tags 'nil
    :file "Parser.y"
    :pointmax 5341
    )
   (semanticdb-table "Makefile"
    :major-mode 'makefile-mode
    :tags '(("LEX" variable (:default-value ("alex")) nil [2 13]) ("YACC" variable (:default-value ("happy")) nil [13 26]) ("GHC" variable (:default-value ("ghc")) nil [26 36]) ("OBJS" variable (:default-value ("Exptype.o" "Scmlex.o" "Parser.o" "Compiler.o")) nil [37 83]) ("all" function (:arguments ("tst_lex" "tst_parser" "tst_compiler")) nil [84 122]) ("tst_compiler" function (:arguments ("tst_compiler.o" "$(OBJS)")) nil [122 207]) ("tst_compiler.o" function (:arguments ("tst_compiler.hs")) nil [207 284]) ("tst_compiler.hi" function (:arguments ("tst_compiler.hs")) nil [207 284]) ("tst_parser" function (:arguments ("tst_parser.o" "Exptype.o" "Scmlex.o" "Parser.o")) nil [284 401]) ("tst_parser.o" function (:arguments ("tst_parser.hs")) nil [401 470]) ("tst_parser.hi" function (:arguments ("tst_parser.hs")) nil [401 470]) ("tst_lex" function (:arguments ("tst_lex.o" "Scmlex.o")) nil [470 537]) ("tst_lex.o" function (:arguments ("tst_lex.hs")) nil [537 594]) ("tst_lex.hi" function (:arguments ("tst_lex.hs")) nil [537 594]) ("Exptype.o" function (:arguments ("Exptype.hs")) nil [594 650]) ("Exptype.hi" function (:arguments ("Exptype.hs")) nil [594 650]) ("Scmlex.o" function (:arguments ("Scmlex.hs")) nil [650 702]) ("Scmlex.hi" function (:arguments ("Scmlex.hs")) nil [650 702]) ("Parser.o" function (:arguments ("Parser.hs")) nil [702 755]) ("Parser.hi" function (:arguments ("Parser.hs")) nil [702 755]) ("Compiler.o" function (:arguments ("Compiler.hs")) nil [755 816]) ("Compiler.hi" function (:arguments ("Compiler.hs")) nil [755 816]) ("Scmlex.hs" function (:arguments ("Scmlex.x")) nil [816 854]) ("Parser.hs" function (:arguments ("Parser.y")) nil [854 893]) ("clean" function nil nil [893 923]))
    :file "Makefile"
    :pointmax 923
    :unmatched-syntax 'nil
    )
   (semanticdb-table "test.scm"
    :major-mode 'scheme-mode
    :tags '(("or" code nil nil [308 312]) ("and" code nil nil [313 318]))
    :file "test.scm"
    :pointmax 319
    )
   (semanticdb-table "Makefile.am"
    :major-mode 'makefile-mode
    :tags '(("top" variable nil nil [218 223]) ("ede_FILES" variable (:default-value ("Project.ede" "Makefile.am")) nil [223 257]) ("bin_PROGRAMS" variable (:default-value ("scc" "scc")) nil [258 279]) ("lib_LTLIBRARIES" variable (:default-value ("libtst_compiler.la")) nil [279 314]) ("scc_SOURCES" variable (:default-value ("Scmlex.hs" "Parser.hs" "Exptype.hs" "Compiler.hs")) nil [314 369]) ("libtst_compiler_la_SOURCES" variable nil nil [369 397]) ("scc_LDADD" variable nil nil [397 408]))
    :file "Makefile.am"
    :pointmax 430
    :unmatched-syntax 'nil
    )
   (semanticdb-table "Project.ede"
    :major-mode 'emacs-lisp-mode
    :tags '(("ede-proj-project" code nil nil [49 274]))
    :file "Project.ede"
    :pointmax 275
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre3"
  :semanticdb-version "2.0pre3"
  )
