;; Object mm/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "mm/"
  :tables (list 
   (semanticdb-table "memory.c"
    :major-mode 'c-mode
    :tags '(("kscm/config.h" include (:system-flag t) nil [2 26]) ("kscm/mm.h" include (:system-flag t) nil [28 48]) ("asm/system.h" include (:system-flag t) nil [49 72]) ("asm/page.h" include (:system-flag t) nil [73 94]) ("sys/types.h" include (:system-flag t) nil [95 117]) ("kscm/proc.h" include (:system-flag t) nil [118 140]) ("stdio.h" include (:system-flag t) nil [142 160]) ("PAGING_MEMORY" variable (:constant-flag t) nil [162 210]) ("PAGING_PAGES" variable (:constant-flag t) nil [209 253]) ("PAGE_NUMB" variable (:constant-flag t :default-value (nil)) nil [252 304]) ("FRAME_NUMB_PADDR" variable (:constant-flag t :default-value (nil)) nil [344 395]) ("kscm_kernel_mm" variable (:dereference 1 :default-value "{
	{ 0x0, K_PG_SIZE * 1024, -1},                   /* code & data structure */
	{ K_HEAP_START, K_PG_SIZE, MMR_EXPAND_UP},      /* heap */
	{ K_STACK_START, K_PG_SIZE, MMR_EXPAND_DOWN},    /* stack */
	{ K_SLOTS_START, K_PG_SIZE, MMR_EXPAND_UP},     /* slots */
	{ K_SLOTS_START + K_SLOTS_SIZE, 0, MMR_EXPAND_UP },
}" :type ("Kscm_mm_region_t" type (:type "class") nil nil)) nil [453 806]) ("BITMAP_SIZE" variable (:constant-flag t) nil [808 868]) ("_mm_bitmap" variable (:dereference 1 :typemodifiers ("static") :type "unsigned long") nil [862 907]) ("HIGH_MEMORY" variable (:typemodifiers ("static") :default-value "0" :type "unsigned long") nil [908 945]) ("get_free_frame" function (:prototype-flag t :arguments (("" variable (:type "void") (reparse-symbol arg-sub-list) [976 981])) :type "unsigned long") nil [947 982]) ("MEM_CODE_REGION" variable (:constant-flag t :default-value (nil)) nil [984 1009]) ("MEM_STACK_REGION" variable (:constant-flag t :default-value (nil)) nil [1010 1036]) ("MEM_DATA_REGION" variable (:constant-flag t :default-value (nil)) nil [1037 1062]) ("PAGE_FRAMES" variable (:constant-flag t) nil [1064 1136]) ("page_copy" function (:pointer 1 :typemodifiers ("static" "inline") :arguments (("pdest" variable (:pointer 1 :type "void") (reparse-symbol arg-sub-list) [1160 1172]) ("psrc" variable (:pointer 1 :type "void") (reparse-symbol arg-sub-list) [1173 1184])) :type "void") nil [1130 1432]) ("temp_map_page" function (:pointer 1 :typemodifiers ("static" "inline") :arguments (("addr" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [1501 1520])) :type "void") nil [1467 1666]) ("clear_page" function (:typemodifiers ("static") :arguments (("page" variable (:pointer 1 :type "void") (reparse-symbol arg-sub-list) [1691 1702])) :type "void") nil [1668 1788]) ("kscm_init_paging" function (:type "void") nil [1834 3930]) ("get_free_frame" function (:arguments (("" variable (:type "void") (reparse-symbol arg-sub-list) [4085 4090])) :type "unsigned long") nil [4056 4435]) ("free_frame" function (:arguments (("frame" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [4453 4473])) :type "void") nil [4437 4559]) ("put_page" function (:pointer 1 :arguments (("ptr" variable (:pointer 1 :type "void") (reparse-symbol arg-sub-list) [4576 4586]) ("page" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [4587 4606])) :type "void") nil [4561 5621]) ("expand_region" function (:pointer 1 :arguments (("region" variable (:type "int") (reparse-symbol arg-sub-list) [5643 5654])) :type "void") nil [5623 6384]))
    :file "memory.c"
    :pointmax 6385
    :unmatched-syntax 'nil
    )
   (semanticdb-table "Makefile"
    :major-mode 'makefile-gmake-mode
    :tags '(("AS86" variable (:default-value ("as86" "-0" "-a")) nil [2 23]) ("LD86" variable (:default-value ("ld86" "-0")) nil [23 41]) ("AR" variable (:default-value ("ar")) nil [42 50]) ("AS" variable (:default-value ("as")) nil [50 58]) ("LD" variable (:default-value ("ld")) nil [58 66]) ("LDFLAGS" variable (:default-value ("-s" "-x" "-Ttext" "0x0")) nil [66 93]) ("CC" variable (:default-value ("gcc-3.4")) nil [93 106]) ("CFLAGS" variable (:default-value ("-Wall" "-O" "-fno-builtin" "-fstrength-reduce" "$(GCC_OPT)" "-finline-functions" "-nostdinc" "-I../include")) nil [106 211]) ("CPP" variable (:default-value ("cpp-3.4" "-nostdinc" "-Iinclude")) nil [211 245]) (".c.s" function nil nil [246 290]) (".s.o" function nil nil [286 317]) (".c.o" function nil nil [313 354]) ("OBJS" variable (:default-value ("memory.o")) nil [354 372]) ("all" function (:arguments ("mm.o")) nil [373 384]) ("mm.o" function (:arguments ("$(OBJS)")) nil [384 425]) ("clean" function nil nil [425 591]) ("dep" function nil nil [591 649]))
    :file "Makefile"
    :pointmax 667
    :unmatched-syntax 'nil
    )
   (semanticdb-table "gc.c"
    :major-mode 'c-mode
    :tags '(("kscm/gc.h" include (:system-flag t) nil [1005 1025]) ("kscm/config.h" include (:system-flag t) nil [1026 1050]) ("sys/types.h" include (:system-flag t) nil [1052 1074]) ("kscm/mm.h" include (:system-flag t) nil [1076 1096]) ("_gc_slot_size" variable (:typemodifiers ("static") :type ("size_t" type (:type "class") nil nil)) nil [1098 1126]) ("_gc_free_nslots" variable (:typemodifiers ("static") :type ("size_t" type (:type "class") nil nil)) nil [1127 1157]) ("_gc_next_slot" variable (:pointer 1 :typemodifiers ("static") :type "void") nil [1158 1185]) ("kscm_init_gc" function (:arguments (("slot_size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1205 1222])) :type "void") nil [1187 1328]) ("gc_alloc_obj" function (:pointer 1 :type ("GC_obj_t" type (:type "class") nil nil)) nil [1330 1587]) ("gc_alloc_nobj" function (:pointer 1 :arguments (("n" variable (:type "int") (reparse-symbol arg-sub-list) [1613 1619])) :type ("GC_obj_t" type (:type "class") nil nil)) nil [1589 1844]) ("gc_free_obj" function (:arguments (("obj" variable (:pointer 1 :type ("GC_obj_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1863 1877])) :type "void") nil [1846 1898]) ("gc_collect_garbage" function (:type "void") nil [1900 1931]))
    :file "gc.c"
    :pointmax 1932
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0beta3"
  :semanticdb-version "2.0beta3"
  )
